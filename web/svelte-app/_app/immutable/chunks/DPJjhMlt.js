var e=Object.defineProperty,s=(s,t,o)=>((s,t,o)=>t in s?e(s,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):s[t]=o)(s,"symbol"!=typeof t?t+"":t,o);import{a as t,_ as o}from"./DPUnOLHg.js";import{d as n,w as a}from"./ChrfcdU-.js";const i=a({servers:[],loading:!1,error:null,autoRefresh:{enabled:!0,interval:3e4,countdown:0,isRefreshing:!1,adaptivePolling:!0},modals:{creation:{show:!1,step:1,maxSteps:5,formData:{name:"",provider:"",server_type:"",region:"",setup_k3s:!0,ssh_key:""},validationErrors:{},loading:!1},terminal:{show:!1,vps:null,connected:!1},health:{show:!1,vps:null,data:null,loading:!1},applications:{show:!1,vps:null,applications:[],loading:!1},ssh:{show:!1,vps:null}},filters:{provider:"",status:"",search:""},sort:{field:"name",direction:"asc"}}),r=n(i,e=>{let s=e.servers;if(e.filters.provider&&(s=s.filter(s=>s.provider===e.filters.provider)),e.filters.status&&(s=s.filter(s=>s.status===e.filters.status)),e.filters.search){const t=e.filters.search.toLowerCase();s=s.filter(e=>e.name.toLowerCase().includes(t)||e.public_ip?.toLowerCase().includes(t)||e.private_ip?.toLowerCase().includes(t))}return s.sort((s,t)=>{const o=s[e.sort.field]||"",n=t[e.sort.field]||"",a="asc"===e.sort.direction?1:-1;return o<n?-1*a:o>n?1*a:0})}),l=n(i,e=>e.autoRefresh),c=n(i,e=>e.modals.creation),d=n(i,e=>e.modals.terminal),m=n(i,e=>e.modals.health),p=n(i,e=>e.modals.applications),h=n(i,e=>e.modals.ssh),f=e=>{i.update(s=>({...s,servers:e}))},w=(e,s)=>{i.update(t=>({...t,servers:t.servers.map(t=>t.id===e?{...t,...s}:t)}))},u=e=>{i.update(s=>({...s,servers:s.servers.filter(s=>s.id!==e)}))},g=e=>{i.update(s=>({...s,loading:e}))},b=e=>{i.update(s=>({...s,error:e}))},S=e=>{i.update(s=>({...s,autoRefresh:{...s.autoRefresh,enabled:e}}))},y=e=>{i.update(s=>({...s,autoRefresh:{...s.autoRefresh,isRefreshing:e}}))},v=e=>{i.update(s=>({...s,filters:{...s.filters,...e}}))},k=(e,s)=>{i.update(t=>({...t,sort:{field:e,direction:s}}))},A=()=>{i.update(e=>({...e,modals:{...e.modals,creation:{...e.modals.creation,show:!0,step:1,validationErrors:{}}}}))},_=()=>{i.update(e=>({...e,modals:{...e.modals,creation:{...e.modals.creation,show:!1,loading:!1,validationErrors:{}}}}))},R=e=>{i.update(s=>({...s,modals:{...s.modals,terminal:{show:!0,vps:e,connected:!1}}}))},E=()=>{i.update(e=>({...e,modals:{...e.modals,terminal:{...e.modals.terminal,show:!1,connected:!1,sessionId:void 0}}}))},T=e=>{i.update(s=>({...s,modals:{...s.modals,terminal:{...s.modals.terminal,connected:e}}}))},z=e=>{i.update(s=>({...s,modals:{...s.modals,terminal:{...s.modals.terminal,sessionId:e}}}))},L=e=>{i.update(s=>({...s,modals:{...s.modals,health:{show:!0,vps:e,data:null,loading:!0}}}))},W=()=>{i.update(e=>({...e,modals:{...e.modals,health:{...e.modals.health,show:!1,loading:!1}}}))},j=e=>{i.update(s=>({...s,modals:{...s.modals,applications:{show:!0,vps:e,applications:[],loading:!0}}}))},$=()=>{i.update(e=>({...e,modals:{...e.modals,applications:{...e.modals.applications,show:!1,loading:!1}}}))},x=e=>{i.update(s=>({...s,modals:{...s.modals,ssh:{show:!0,vps:e}}}))},C=()=>{i.update(e=>({...e,modals:{...e.modals,ssh:{...e.modals.ssh,show:!1}}}))};let I=null,M=null,O=null,D=null;const F=new class{constructor(){s(this,"sessions",new Map),s(this,"reconnectAttempts",new Map),s(this,"maxReconnectAttempts",5),s(this,"reconnectDelay",1e3)}async createTerminalSession(e,s){try{if(await(async()=>{if(!I){const{Terminal:e}=await o(async()=>{const{Terminal:e}=await import("./BSiQSBY7.js").then(e=>e.x);return{Terminal:e}},[],import.meta.url);I=e}if(!M){const{FitAddon:e}=await o(async()=>{const{FitAddon:e}=await import("./BSiQSBY7.js").then(e=>e.a);return{FitAddon:e}},[],import.meta.url);M=e}if(!O){const{WebLinksAddon:e}=await o(async()=>{const{WebLinksAddon:e}=await import("./BSiQSBY7.js").then(e=>e.b);return{WebLinksAddon:e}},[],import.meta.url);O=e}if(!D){const{SearchAddon:e}=await o(async()=>{const{SearchAddon:e}=await import("./BSiQSBY7.js").then(e=>e.c);return{SearchAddon:e}},[],import.meta.url);D=e}})(),!(I&&M&&O&&D))throw new Error("Failed to load xterm.js and addons");const n=(await t.post("/ws-terminal/create",{vps_id:e.id})).session_id,a=new I({theme:{background:"#1a1a1a",foreground:"#ffffff",cursor:"#ffffff",cursorAccent:"#000000",selection:"#444444",black:"#000000",red:"#ff5555",green:"#50fa7b",yellow:"#f1fa8c",blue:"#bd93f9",magenta:"#ff79c6",cyan:"#8be9fd",white:"#f8f8f2",brightBlack:"#44475a",brightRed:"#ff5555",brightGreen:"#50fa7b",brightYellow:"#f1fa8c",brightBlue:"#bd93f9",brightMagenta:"#ff79c6",brightCyan:"#8be9fd",brightWhite:"#ffffff"},fontFamily:'JetBrains Mono, Menlo, Monaco, "Courier New", monospace',fontSize:14,fontWeight:"normal",letterSpacing:0,lineHeight:1.2,cursorBlink:!0,cursorStyle:"block",scrollback:1e3,tabStopWidth:4,allowTransparency:!0,convertEol:!0,disableStdin:!1,windowsMode:!1}),i=new M,r=new O,l=new D;a.loadAddon(i),a.loadAddon(r),a.loadAddon(l),a.open(s),i.fit();const c={id:n,vps:e,terminal:a,fitAddon:i,webLinksAddon:r,searchAddon:l,webSocket:null,connected:!1,element:s,cleanup:()=>this.cleanupSession(n)};this.sessions.set(n,c),await this.connectWebSocket(n);const d=()=>{c.connected&&(i.fit(),this.sendResize(n,a.cols,a.rows))};window.addEventListener("resize",d);const m=c.cleanup;return c.cleanup=()=>{window.removeEventListener("resize",d),m()},z(n),c}catch(n){throw console.error("Failed to create terminal session:",n),n}}async connectWebSocket(e){const s=this.sessions.get(e);if(!s)throw new Error(`Session ${e} not found`);const t=`${"https:"===window.location.protocol?"wss:":"ws:"}//${window.location.host}/ws/terminal/${e}`;try{const o=new WebSocket(t);s.webSocket=o,o.onopen=()=>{console.log(`WebSocket connected for session ${e}`),s.connected=!0,T(!0),this.reconnectAttempts.set(e,0),this.sendResize(e,s.terminal.cols,s.terminal.rows),s.terminal.writeln("\r\n[32mConnected to server[0m\r\n")},o.onmessage=e=>{try{const t=JSON.parse(e.data);"output"===t.type?s.terminal.write(t.data):"error"===t.type?s.terminal.writeln(`\r\n[31mError: ${t.message}[0m\r\n`):"resize"===t.type&&console.log(`Terminal resized to ${t.cols}x${t.rows}`)}catch(t){s.terminal.write(e.data)}},o.onclose=t=>{console.log(`WebSocket closed for session ${e}:`,t.code,t.reason),s.connected=!1,T(!1),s.terminal.writeln("\r\n[31mConnection lost[0m\r\n"),1e3!==t.code&&this.attemptReconnection(e)},o.onerror=t=>{console.error(`WebSocket error for session ${e}:`,t),s.connected=!1,T(!1),s.terminal.writeln("\r\n[31mConnection error[0m\r\n")},s.terminal.onData(e=>{s.connected&&s.webSocket&&s.webSocket.send(JSON.stringify({type:"input",data:e}))}),s.terminal.onKey(e=>{if(s.connected&&s.webSocket&&e.domEvent.ctrlKey){const t=e.domEvent.keyCode;67===t?s.webSocket.send(JSON.stringify({type:"signal",signal:"SIGINT"})):68===t&&s.webSocket.send(JSON.stringify({type:"signal",signal:"SIGTERM"}))}})}catch(o){throw console.error("Failed to connect WebSocket:",o),o}}async attemptReconnection(e){const s=this.sessions.get(e);if(!s)return;const t=this.reconnectAttempts.get(e)||0;t>=this.maxReconnectAttempts?s.terminal.writeln("\r\n[31mMax reconnection attempts reached[0m\r\n"):(this.reconnectAttempts.set(e,t+1),s.terminal.writeln(`\r\n[33mReconnecting... (${t+1}/${this.maxReconnectAttempts})[0m\r\n`),setTimeout(async()=>{try{await this.connectWebSocket(e)}catch(s){console.error("Reconnection failed:",s),this.attemptReconnection(e)}},this.reconnectDelay*Math.pow(2,t)))}sendResize(e,s,t){const o=this.sessions.get(e);o&&o.connected&&o.webSocket&&o.webSocket.send(JSON.stringify({type:"resize",cols:s,rows:t}))}async destroySession(e){const s=this.sessions.get(e);if(s)try{s.webSocket&&s.webSocket.close(1e3,"Session terminated"),s.terminal.dispose(),await t.delete(`/ws-terminal/${e}`),this.sessions.delete(e),this.reconnectAttempts.delete(e),T(!1),z("")}catch(o){console.error("Failed to destroy terminal session:",o)}}cleanupSession(e){const s=this.sessions.get(e);s&&(s.webSocket&&s.webSocket.close(1e3,"Session cleanup"),s.terminal.dispose(),this.sessions.delete(e),this.reconnectAttempts.delete(e))}getSession(e){return this.sessions.get(e)}getAllSessions(){return Array.from(this.sessions.values())}resizeSession(e){const s=this.sessions.get(e);s&&s.connected&&(s.fitAddon.fit(),this.sendResize(e,s.terminal.cols,s.terminal.rows))}focusSession(e){const s=this.sessions.get(e);s&&s.terminal.focus()}clearSession(e){const s=this.sessions.get(e);s&&s.terminal.clear()}searchInSession(e,s){const t=this.sessions.get(e);return!(!t||!t.searchAddon)&&t.searchAddon.findNext(s)}async initialize(e,s){console.warn("initialize() is deprecated. Use createTerminalSession() instead.");const t={id:s};await this.createTerminalSession(t,e)}cleanup(){for(const[e]of this.sessions)this.cleanupSession(e)}isConnected(){for(const e of this.sessions.values())if(e.connected)return!0;return!1}};export{u as A,w as B,d as a,E as b,c,m as d,W as e,p as f,$ as g,_ as h,C as i,v as j,k,A as l,g as m,b as n,f as o,y as p,r as q,l as r,h as s,F as t,S as u,i as v,x as w,j as x,L as y,R as z};
