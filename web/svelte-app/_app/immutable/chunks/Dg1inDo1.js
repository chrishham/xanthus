import{d as e,w as a}from"./xKLsFWJN.js";import{a as r}from"./CPvKLmEG.js";const t=a({domains:[],loading:!1,error:null,filters:{managed:"all",status:"all",search:""},sort:{field:"name",direction:"asc"}}),n=e(t,e=>{let a=[...e.domains];if("all"!==e.filters.managed&&(a=a.filter(a=>"managed"===e.filters.managed?a.managed:"unmanaged"!==e.filters.managed||!a.managed)),"all"!==e.filters.status&&(a=a.filter(a=>a.status===e.filters.status)),e.filters.search){const r=e.filters.search.toLowerCase();a=a.filter(e=>e.name.toLowerCase().includes(r)||e.status.toLowerCase().includes(r)||e.type.toLowerCase().includes(r))}return a.sort((a,r)=>{let t=a[e.sort.field],n=r[e.sort.field];"created_on"!==e.sort.field&&"modified_on"!==e.sort.field||(t=new Date(t),n=new Date(n)),"string"==typeof t&&"string"==typeof n&&(t=t.toLowerCase(),n=n.toLowerCase());let o=0;return t>n?o=1:t<n&&(o=-1),"desc"===e.sort.direction?-o:o}),a}),o=e=>{t.update(a=>({...a,domains:e,loading:!1,error:null}))},s=e=>{t.update(a=>({...a,loading:e}))},i=e=>{t.update(a=>({...a,error:e,loading:!1}))};const c=new class{async fetchDomains(){return(await r.get("/dns/list","DNS Management")).domains||[]}async configureDomain(e){try{const a=new FormData;a.append("domain",e);const r=await fetch("/dns/configure",{method:"POST",body:a}),t=await r.json();if(!r.ok)throw new Error(t.error||"Configuration failed");return{success:!0,message:t.message||"SSL configuration completed successfully",config:t.config}}catch(a){throw console.error("Error configuring domain:",a),new Error(a instanceof Error?a.message:"Failed to configure domain")}}async removeDomain(e){try{const a=new FormData;a.append("domain",e);const r=await fetch("/dns/remove",{method:"POST",body:a}),t=await r.json();if(!r.ok)throw new Error(t.error||"Removal failed");return{success:!0,message:t.message||"Domain configuration removed successfully"}}catch(a){throw console.error("Error removing domain:",a),new Error(a instanceof Error?a.message:"Failed to remove domain")}}async getDomainConfiguration(e){try{return await r.get(`/dns/config/${e}`)}catch(a){throw console.error("Error fetching domain configuration:",a),new Error("Failed to fetch domain configuration")}}validateDomainName(e){return/^[a-zA-Z0-9][a-zA-Z0-9-]{0,61}[a-zA-Z0-9](?:\.[a-zA-Z0-9][a-zA-Z0-9-]{0,61}[a-zA-Z0-9])*$/.test(e)}getStatusBadgeClass(e){switch(e.toLowerCase()){case"active":return"bg-green-100 text-green-800";case"pending":return"bg-yellow-100 text-yellow-800";case"error":case"failed":return"bg-red-100 text-red-800";case"paused":return"bg-orange-100 text-orange-800";default:return"bg-gray-100 text-gray-800"}}formatDate(e){try{return new Date(e).toLocaleDateString("en-US",{year:"numeric",month:"short",day:"numeric"})}catch(a){return e}}formatDateTime(e){try{return new Date(e).toLocaleString("en-US",{year:"numeric",month:"short",day:"numeric",hour:"2-digit",minute:"2-digit"})}catch(a){return e}}getDomainTypeDisplay(e){switch(e.toLowerCase()){case"full":return"Full Zone";case"partial":return"Partial Zone";default:return e}}isDomainReady(e){return e.managed&&"active"===e.status&&!e.paused}getManagementStatusText(e){return e.managed?"Managed by Xanthus":"Not Managed"}getAvailableActions(e){const a=[];return e.managed?(a.push("view-config"),a.push("remove")):a.push("configure"),a}};export{i as a,o as b,t as c,c as d,n as f,s};
