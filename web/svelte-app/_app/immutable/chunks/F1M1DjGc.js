var e=Object.defineProperty,t=(t,s,r)=>((t,s,r)=>s in t?e(t,s,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[s]=r)(t,"symbol"!=typeof s?s+"":s,r);import{w as s}from"./DosQeM9E.js";import{a as r,e as o}from"./E98ndKRw.js";const a=new class{constructor(){t(this,"store",s({step:1,isComplete:!1})),t(this,"statusStore",s({isSetupRequired:!0,hasHetznerToken:!1,hasCloudflareToken:!1,currentStep:1})),t(this,"subscribe",this.store.subscribe),t(this,"subscribeStatus",this.statusStore.subscribe)}async checkSetupStatus(){try{const e=(await r.get("/setup/status")).data;return this.statusStore.set(e),this.store.update(t=>({...t,step:e.currentStep,isComplete:!e.isSetupRequired})),e}catch(e){console.error("Failed to check setup status:",e),await o.handleAPIError(e,"setup status check");const t={isSetupRequired:!0,hasHetznerToken:!1,hasCloudflareToken:!1,currentStep:1};return this.statusStore.set(t),t}}async configureHetzner(e){try{const t=await r.post("/setup/hetzner",{hetzner_token:e});if(t.success)return this.store.update(t=>({...t,hetznerToken:e,step:2})),this.statusStore.update(e=>({...e,hasHetznerToken:!0,currentStep:2})),o.showSuccess("Hetzner Setup Complete","Hetzner API token configured successfully"),!0;throw new Error(t.message||"Failed to configure Hetzner token")}catch(t){return console.error("Hetzner setup failed:",t),await o.handleAPIError(t,"Hetzner setup"),!1}}async configureCloudflare(e){try{if((await r.post("/auth/login",{cf_token:e})).access_token)return this.store.update(t=>({...t,cloudflareToken:e,step:3,isComplete:!0})),this.statusStore.update(e=>({...e,hasCloudflareToken:!0,currentStep:3,isSetupRequired:!1})),o.showSuccess("Setup Complete","Platform setup completed successfully"),!0;throw new Error("Invalid Cloudflare token")}catch(t){return console.error("Cloudflare setup failed:",t),await o.handleAPIError(t,"Cloudflare setup"),!1}}async completeSetup(e){try{if(!(await this.configureHetzner(e.hetznerToken)))return!1;return!!(await this.configureCloudflare(e.cloudflareToken))}catch(t){return console.error("Setup completion failed:",t),await o.handleAPIError(t,"setup completion"),!1}}reset(){this.store.set({step:1,isComplete:!1}),this.statusStore.set({isSetupRequired:!0,hasHetznerToken:!1,hasCloudflareToken:!1,currentStep:1})}setStep(e){this.store.update(t=>({...t,step:e}))}nextStep(){this.store.update(e=>({...e,step:Math.min(e.step+1,3)}))}previousStep(){this.store.update(e=>({...e,step:Math.max(e.step-1,1)}))}};export{a as s};
