# ArgoCD Helm Values Template
# This template supports placeholder substitution for dynamic deployment

# Global configuration
global:
  # Default domain for ArgoCD
  domain: "{{SUBDOMAIN}}.{{DOMAIN}}"

# ArgoCD server configuration
server:
  # Enable ingress for ArgoCD server
  ingress:
    enabled: true
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      traefik.ingress.kubernetes.io/router.tls: "true"
    hosts:
      - "{{SUBDOMAIN}}.{{DOMAIN}}"
    tls:
      - secretName: "{{DOMAIN}}-tls"
        hosts:
          - "{{SUBDOMAIN}}.{{DOMAIN}}"
    ingressClassName: ""
  
  # Configure server to run behind ingress
  extraArgs:
    - --insecure
  
  # Environment variables including timezone
  env:
    - name: TZ
      value: "{{TIMEZONE}}"
  
  # Service configuration
  service:
    type: ClusterIP
    servicePortHttp: 80
    servicePortHttpName: http
  
  # Resources
  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 250m
      memory: 512Mi

# ArgoCD repository server configuration
repoServer:
  # Environment variables including timezone
  env:
    - name: TZ
      value: "{{TIMEZONE}}"
  
  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 250m
      memory: 512Mi

# ArgoCD application controller configuration
controller:
  # Environment variables including timezone
  env:
    - name: TZ
      value: "{{TIMEZONE}}"
  
  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 1Gi

# Redis configuration - single instance with persistence
redis:
  enabled: true
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi

# Redis HA configuration - disabled for single-node clusters
redis-ha:
  enabled: false

# Dex configuration (disable external auth by default)
dex:
  enabled: false

# Notifications controller
notifications:
  enabled: true
  # Environment variables including timezone
  env:
    - name: TZ
      value: "{{TIMEZONE}}"
  
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 50m
      memory: 64Mi

# ApplicationSet controller
applicationSet:
  enabled: true
  # Environment variables including timezone
  env:
    - name: TZ
      value: "{{TIMEZONE}}"
  
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 50m
      memory: 64Mi

# Configure RBAC
configs:
  rbac:
    # Default policy for authenticated users
    policy.default: role:readonly
    # Admin users (can be configured post-deployment)
    policy.csv: |
      p, role:admin, applications, *, */*, allow
      p, role:admin, clusters, *, *, allow
      p, role:admin, repositories, *, *, allow
      g, argocd-admins, role:admin
  
  # Configure server parameters to run in insecure mode
  params:
    server.insecure: true

# Create initial admin secret
createAggregateRoles: true

# Sync policy
syncPolicy:
  # Automatically sync applications
  automated:
    prune: false
    selfHeal: false